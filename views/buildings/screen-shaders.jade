mixin screenShaders(id)
    script(type="x/vertex-shader" id="#{id}-vertex").
        varying vec3 pos;
        varying vec3 norm;
        varying vec2 vUv;
        void main() {
            vUv = uv;
            norm = normal;
            pos = vec3(modelViewMatrix * vec4(position, 1.0));
            gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);
        }
    script(type="x/fragment-shader" id="#{id}-frag").
        varying vec2 vUv;
        varying vec3 pos;
        varying vec3 norm;
        void main() {
            float edgeFactor = 0.;
            if(dot(norm, vec3(0.,0.,1.)) == 0. && dot(norm, vec3(1.,0.,0.)) == 0.)
                edgeFactor = pow(1./abs(0.5 - abs(vUv.x+vUv.y)) + 1./abs(0.5 - abs(vUv.x-vUv.y)), 0.5)/40.;
            else
                edgeFactor = pow(1./vUv.y + 1./(1.-vUv.y), 0.25)/20.;
            gl_FragColor = vec4(0.,0.,0.,0.9) + vec4(edgeFactor * vec3(1.,1.,1.),1.);
        }